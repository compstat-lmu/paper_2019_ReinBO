## Template for parameter description file for Iterated Race.
##
## The format is one parameter per line. Each line contains:
##
## 1: Name of the parameter. An unquoted alphanumeric string,
##    example: ants

## 2: Switch to pass the parameter. A quoted (possibly empty) string, 
##    if the value and the switch must be separated, add a space at
##    the end of the string. Example : "--version1 --ants "

## 3: Type. An unquoted single letter, among 
##     i: Integer, c: categorical, o: ordinal, r: real.

## 4: For c and o: All possible values, that is, a variable number of
##    quoted or unquoted strings separated by commas within
##    parenthesis. Empty strings and strings containing commas or
##    spaces must be quoted.
##    For i,r: a pair of unquoted numbers representing minimum and
##    maximum values. 

## 5: A conditional parameter can be defined according to the values of
##    one or several other parameters.  This is done by adding a
##    character '|' followed by an R expression involving the names of
##    other parameters. This expression must return TRUE if the 
##    condition is satisfied, FALSE otherwise.

# 1:              2:                    3: 4:                                                                                         5:
Preprocess        "--Preprocess"        c  ("cpoScale", "cpoScale.scale", "cpoScale.center", "cpoSpatialSign", "NA")
Filter            "--Filter"            c  ("cpoFilterAnova.perc", "cpoFilterKruskal.perc", "cpoFilterUnivariate.perc", "cpoPca.rank", "NA")
Classify          "--Classify"          c  ("kknn", "ksvm", "xgboost", "ranger", "naiveBayes")
perc              "--perc"              r  (0.1,1)                                                                                    | Filter %in% c("cpoFilterAnova.perc", "cpoFilterKruskal.perc", "cpoFilterUnivariate.perc")
rank              "--rank"              r  (0.1,1)                                                                                    | Filter == "cpoPca.rank"  
k                 "--k"                 i  (1,20)                                                                                     | Classify == "kknn"
C                 "--C"                 r  (-15,15)                                                                                   | Classify == "ksvm"
sigma             "--sigma"             r  (-15,15)                                                                                   | Classify == "ksvm"
mtry              "--mtry"              r  (0.1,0.66666)                                                                               | Classify == "ranger"
sample.fraction   "--sample.fraction"   r  (0.1,1)                                                                                    | Classify == "ranger"
eta               "--eta"               r  (0.001,0.3)                                                                                | Classify == "xgboost"
max_depth         "--max_depth"         i  (1,15)                                                                                     | Classify == "xgboost"
subsample         "--subsample"         r  (0.5,1)                                                                                    | Classify == "xgboost"
colsample_bytree  "--colsample_bytree"  r  (0.5,1)                                                                                    | Classify == "xgboost"
min_child_weight  "--min_child_weight"  r  (0,50)                                                                                     | Classify == "xgboost"
laplace           "--laplace"           r  (0.01,100)                                                                                 | Classify == "naiveBayes"

